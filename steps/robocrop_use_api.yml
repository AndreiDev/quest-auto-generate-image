id: robocrop_use_api
learningObjectives: 
  - Using the DALL-E API
hints:
  - Try to call the DALL-E API when creating a new product without a product image
  - Use `docker exec -it [DOCKER IMAGE NAME] bash` to get into the backend image and install the openai library
  - Did you extract the open api to environment variable caled OPENAI_API_KEY?
startFlow:
  do:
    - actionId: bot_message
      params:
        person: head-of-rd
        messages:
          - text: "I think it's just the right time for your first task!"
            delay: 1200
          - text: So you know those pesky people, what do we call them? Oh, right, users! So some of these “users” are adding products without a product image - so lame. But we figured that with the newly released DALL-E API we'll never have to see a default product image again."
            delay: 2500
          - text: "To generate images, you'll need an API key. I've created one for you: `${secrets.OPENAI_API_KEY}`. Now let's make this happen."
            delay: 700
          - text: "We need to make sure the **backend** automatically generates an image for items that are created without one."
            delay: 800
          - text: "Can you integrate DALL-E into our codebase? You will need to use [OpenAI API](https://beta.openai.com/docs/guides/images/usage). Oh, make sure to pass the item title as the prompt and set the size to 256x256."
            delay: 1200
          - text: "You'll need to use an API token, make sure you don't write it in code but using an **environment variable (OPENAI_API_KEY)**"
            delay: 1200
          - text: "I have to head out for a bit, but just :instruction[create a PR when you're done] and I'll review it."
            delay: 1700
trigger:
  type: github_pr_lifecycle_status
  flowNode:
    switch:
      key: "${eventType}"
      cases:
        github_pr_opened:
          do:
            - actionId: github_pr_comment
              params:
                person: head-of-rd
                message: "On it! I'll review the changes as soon as possible!"
        github_pr_workflow_complete_success:
          if:
            conditions:
            - conditionId: github_does_file_contain
              equals: false
              params:
                fileName: 'backend/models/Item.js'
                regex: sk-
            then:
              do:
                - actionId: bot_message
                  params:
                    person: head-of-rd
                    messages:
                    - text: Looking good! You can merge the PR now.
                      delay: 1500
                - actionId: github_pr_approve
                  params:
                    person: head-of-rd
                    message: Looking good! You can merge the PR now.
            else:    
              do:
              - actionId: bot_message
                params:
                  person: head-of-rd
                  messages:
                  - text: "Looks like your code has the DALL-E API key embedded in it. That's not the kind of thing we want in our source code. Please use our regular mechanism for passing secrets to production."
                    delay: 1000
              - actionId: github_pr_reject
                params:
                  person: head-of-rd
                  message: "Looks like your code has the DALL-E API key embedded in it. That's not the kind of thing we want in our source code. Please use our regular mechanism for passing secrets to production."
        github_pr_workflow_complete_failure:
          do:
            - actionId: github_pr_reject
              params:
                person: head-of-rd
                message: Looks like we have a few checks failing. Please try again and make sure they all pass.

            - actionId: bot_message
              params:
                person: head-of-rd
                messages:
                  - text: Looks like we have a few checks failing. Please try again and make sure they all pass.
                    delay: 2500
        github_pr_merged:
          do:
            - actionId: finish_step

githubActions:
  backend:
    capabilities:
      - axios
      - dotenv
    testFile: "backend.js"
